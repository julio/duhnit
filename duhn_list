#!/usr/bin/env python

from datetime import datetime, timedelta
import argparse

import colorama
import boto3
from boto3.dynamodb.conditions import Key, Attr, And

class DuhnList:
    def __init__(self, email, args):
        boto3.setup_default_session(profile_name='duhnit')
        dynamodb = boto3.resource('dynamodb')
        self.deeds_table = dynamodb.Table('deeds')
        self.email = email
        self.args = args

    def deed_item_formatted_date(self, done_at):
        datetime_original_format = '%Y-%m-%d %H:%M:%S.%f'
        time = datetime.strptime(done_at, datetime_original_format)

        datetime_short_format = '%Y-%m-%d %H:%M'
        return time.strftime(datetime_short_format)

    def should_filter_by_type(self):
        return self.args.type != 'all'

    def filter_expression(self):
        n_days_ago = datetime.now() - timedelta(days=int(self.args.days))
        return Key('done-at').between(str(n_days_ago), str(datetime.now()))

    def key_condition_expression(self):
        key_condition_expression = Key('author-email').eq('julio@morgane.com')
        if self.should_filter_by_type():
            key_condition_expression = key_condition_expression & Key('deed-type').begins_with(self.args.type)
        return key_condition_expression

    def query_response(self):
        response = self.deeds_table.query(
			KeyConditionExpression=self.key_condition_expression(),
			FilterExpression=self.filter_expression())
        return response

    def deed_list(self):
        response = self.query_response()

        items = sorted(response['Items'], key=lambda item: item['done-at'])
        for item in items:
            print(self.deed_item_formatted_date(item['done-at']) + '\033[31m' + ' :' + item['deed-type'].split('-')[0] + ': ' + '\033[0m' + item['deed'])

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Things I duhn!')

    parser.add_argument('--type', default='all', help='Things I duhn (default: all)')
    parser.add_argument('-d', '--days', default='15',  help='Number of days back (default: 15)')
    args = parser.parse_args()

    DuhnList('julio@morgane.com', args).deed_list()
